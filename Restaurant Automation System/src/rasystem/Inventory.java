/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rasystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import java.time.*;
import java.util.*;
import java.awt.*;

/**
 *
 * @author Dell
 */
public class Inventory extends javax.swing.JFrame {

    /**
     * Creates new form Inventory
     */
    private int flag;

    public Inventory() {
        initComponents();
        flag = 0;

        add.setVisible(false);
        order.setVisible(false);
        confirm.setVisible(false);

        Date date = new Date();
        LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        int yy = (localDate.getYear());
        int mm = (localDate.getMonthValue());
        int dd = (localDate.getDayOfMonth());
        dateL.setText(dd + "-" + mm + "-" + yy);

        jTable5.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTable5.getColumnModel().getColumn(1).setPreferredWidth(70);
        jTable5.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTable5.getColumnModel().getColumn(3).setPreferredWidth(75);
        jTable5.getColumnModel().getColumn(4).setPreferredWidth(65);

        DefaultTableModel model = (DefaultTableModel) jTable5.getModel();

        try {
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS", "root", "go5a1on1");
            Statement st = con.createStatement();

            String q1 = " select *  from ING ; ";
            ResultSet rs = st.executeQuery(q1);

            if (!rs.isBeforeFirst()) {
                JOptionPane.showMessageDialog(null, "NO Ingredients in Stock!!", "ERROR!", JOptionPane.ERROR_MESSAGE);
            } 
            else 
            {      
                while (rs.next()) {
                    String s1 = rs.getString("ID");
                    String s2 = rs.getString("NAME");
                    float s3 = rs.getFloat("Quantity");
                    float s31 = rs.getFloat("Threshold");
                    float s4 = rs.getFloat("Price");
                    model.addRow(new Object[]{s1, s2, s3, s31, s4});

                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "ALERT", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Proceed = new javax.swing.JButton();
        order = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        id = new javax.swing.JTextField();
        stock = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        dateL = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        add.setText("Add to Order");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        confirm.setText("Confirm Order");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });

        back.setText("<< Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel11.setText("Ing Order ID  : ");

        jLabel1.setText("Date      :     ");

        Proceed.setText("Proceed");
        Proceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProceedActionPerformed(evt);
            }
        });

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID NO.", "DISH NAME", "AMOUNT", "PRICE (Rs.)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        order.setViewportView(jTable4);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Threshold", "Price(Rs)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        stock.setViewportView(jTable5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(order, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(add)
                                        .addGap(26, 26, 26)
                                        .addComponent(back)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(confirm)
                                        .addGap(3, 3, 3))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(dateL, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(103, 103, 103)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Proceed, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(stock, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stock, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(dateL, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Proceed)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(add)
                            .addComponent(back)
                            .addComponent(confirm))
                        .addGap(18, 18, 18)
                        .addComponent(order, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void setDetails(String oid) {
        id.setText(oid);       
        flag = 0;
    }
    
    public int getflag() {
        return flag;
    }

    public void click1() {
        ProceedActionPerformed(null);
    }


    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed

        String s = id.getText();

        try {
            Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS", "root", "go5a1on1");
            Statement st = con.createStatement();

            String s0 = (String) JOptionPane.showInputDialog(null, "ENTER Ingredient ID ", "Place Order", JOptionPane.PLAIN_MESSAGE);

            String query = "Select ID from ING where ID = \"" + s0 + "\"; ";
            ResultSet rs0 = st.executeQuery(query);

            int flag = 0;
            if (!rs0.isBeforeFirst()) {
                flag = 1;
                JOptionPane.showMessageDialog(null, "Ingredient with this ID absent!!\nAdd to Inventory First! ", "Alert", JOptionPane.WARNING_MESSAGE);

            }

            rs0.close();

            if (flag == 0) {
                String str = (String) JOptionPane.showInputDialog(null, "Amount", "Placing Order", JOptionPane.PLAIN_MESSAGE);
                int no = Integer.parseInt(str);

                query = "Select * from ING where ID = \"" + s0 + "\"; ";
                ResultSet rs = st.executeQuery(query);
                rs.next();

                DefaultTableModel model = (DefaultTableModel) jTable4.getModel();

                String s1 = rs.getString("ID");
                String s2 = rs.getString("NAME");
                int s3 = no;
                float s4 = no * rs.getFloat("Price") / 1000;

                model.addRow(new Object[]{s1, s2, s3, s4});

                s1 = "\"" + s1 + "\"";
                s2 = "\"" + s2 + "\"";

                float value = rs.getFloat("quantity");
                value += no;

                query = "update Ing set Quantity = " + value + " where ID = \"" + s0 + "\"; ";
                st.executeUpdate(query);

                query = "insert into " + s + " values( " + s1 + "," + s2 + "," + no + "," + s4 + "); ";
                st.executeUpdate(query);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex, "Alert", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_addActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed

        Date date = new Date();
        LocalDate localDate = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        int yy = (localDate.getYear());
        int mm = (localDate.getMonthValue());
        int dd = (localDate.getDayOfMonth());

        String dated = "\"" + yy + "-" + mm + "-" + dd + "\"";

        int input = JOptionPane.showConfirmDialog(null, "Confirm Order ?", "Select an Option...",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (input == JOptionPane.YES_OPTION) {

            String s = id.getText();
            try {
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS", "root", "go5a1on1");
                Statement st = con.createStatement();

                String query = " select sum(Price) from " + s;
                ResultSet rs = st.executeQuery(query);
                rs.next();

                float total = rs.getFloat("sum(Price)");

                query = " insert into " + s + " values( '' , 'TOTAL ->' , -1 , " + total + " ) ; ";
                st.executeUpdate(query);

                int input1 = JOptionPane.showConfirmDialog(null, "The Total Cost is : Rs." + total + "\nProcess Transaction??", "Transaction",
                        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

                if (input1 == JOptionPane.YES_OPTION) {
                    query = " insert into BUY values ( " + dated + ",'" + s + "'," + total + ");";
                    st.executeUpdate(query);

                    Inventory x = new Inventory();
                    x.setVisible(true);
                    x.setLocationRelativeTo(null);
                    this.dispose();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex, "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed

        ManHP x = new ManHP();
        x.setVisible(true);
        x.setLocationRelativeTo(null);
        this.dispose();

    }//GEN-LAST:event_backActionPerformed

    private void ProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProceedActionPerformed

        String s = id.getText();
        if (s.equals("") == true) {
            JOptionPane.showMessageDialog(null, "ENTER ID No. ! ", "Order Failed", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS", "root", "go5a1on1");
                Statement st = con.createStatement();

                String query = "Select ID from BUY where ID = \"" + id.getText() + "\"; ";
                ResultSet rs = st.executeQuery(query);

                if (rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(null, "Order with this ID present!!\nPlease Enter different ID. ", "Alert", JOptionPane.ERROR_MESSAGE);
                    id.setText(null);
                } else {
                    flag = 1 ; 
                    rs.next();
                    query = " create table " + s + " ( ID varchar(20) , Name varchar(30) , Qty int , Price float) ; ";
                    st.executeUpdate(query);

                    add.setVisible(true);
                    confirm.setVisible(true);
                    order.setVisible(true);

                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex, "Alert", JOptionPane.ERROR_MESSAGE);

            }
        }

    }//GEN-LAST:event_ProceedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Proceed;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel dateL;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JScrollPane order;
    private javax.swing.JScrollPane stock;
    // End of variables declaration//GEN-END:variables
}
