/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rasystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.time.* ;  
import java.util.*;

/**
 *
 * @author Dell
 */
public class SalesRecord extends javax.swing.JFrame {

    /**
     * Creates new form SalesRecord
     */
    public SalesRecord() {
        
        initComponents();
        disp.setVisible(false) ; 
        
        ans.setVisible(false) ; 
        total.setVisible(false) ; 
                
        sM.setVisible(false) ; 
        sY.setVisible(false) ; 
                
        pM.setVisible(false) ; 
        pY.setVisible(false) ;          
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sBW = new javax.swing.JButton();
        sM = new javax.swing.JButton();
        sY = new javax.swing.JButton();
        sREC = new javax.swing.JButton();
        pREC = new javax.swing.JButton();
        pBW = new javax.swing.JButton();
        pM = new javax.swing.JButton();
        pY = new javax.swing.JButton();
        disp = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ans = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        backB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sBW.setText("Sales Records b/w two dates ");
        sBW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sBWActionPerformed(evt);
            }
        });

        sM.setText("Sales Records for a month ");
        sM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sMActionPerformed(evt);
            }
        });

        sY.setText("Sales Records for an year ");
        sY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sYActionPerformed(evt);
            }
        });

        sREC.setText("Recent Sales");
        sREC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sRECActionPerformed(evt);
            }
        });

        pREC.setText("Recent Purchases");
        pREC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pRECActionPerformed(evt);
            }
        });

        pBW.setText("Purchase Records b/w two dates ");
        pBW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pBWActionPerformed(evt);
            }
        });

        pM.setText("Purchase Records for a month ");
        pM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pMActionPerformed(evt);
            }
        });

        pY.setText("Pirchase Records for an year ");
        pY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pYActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Date", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        disp.setViewportView(jTable1);

        total.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        total.setText("TOTAL:");

        backB.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backB.setText("<< BACK");
        backB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pREC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pBW, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sY, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sM, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sBW, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sREC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backB)
                        .addGap(14, 14, 14)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(ans, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(disp, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sREC)
                        .addGap(18, 18, 18)
                        .addComponent(sBW)
                        .addGap(18, 18, 18)
                        .addComponent(sM)
                        .addGap(18, 18, 18)
                        .addComponent(sY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pREC)
                        .addGap(18, 18, 18)
                        .addComponent(pBW)
                        .addGap(18, 18, 18)
                        .addComponent(pM))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(disp, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pY)
                        .addComponent(total)
                        .addComponent(backB, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sBWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sBWActionPerformed
     
    DefaultTableModel model=(DefaultTableModel)jTable1.getModel();               
    model.setRowCount(0) ;     
        
    String s1 = (String)JOptionPane.showInputDialog(null,"ENTER START DATE (yyyy-mm-dd) " , "Sales" , JOptionPane.PLAIN_MESSAGE );
    String s2 = (String)JOptionPane.showInputDialog(null,"ENTER END DATE (yyyy-mm-dd) "   , "Sales" , JOptionPane.PLAIN_MESSAGE );
        
        try 
        {
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS","root","go5a1on1");
            Statement st=con.createStatement();
            Statement st1=con.createStatement();
            
            String query = "select * from SALES where date BETWEEN \"" + s1 + "\" AND \"" + s2 + "\" order by date DESC ; " ;
            ResultSet rs = st.executeQuery(query) ;           
            
            if ( !rs.isBeforeFirst() ) 
                {    
                    JOptionPane.showMessageDialog(null,"NO RECORDS to SHOW !","EMPTY!",JOptionPane.INFORMATION_MESSAGE);
                } 
            else
                {   
                    disp.setVisible(true) ;  
                    
                    while(rs.next())
                    {
                        String str1 =(rs.getDate("DATE")).toString(); 
                        String str2 = rs.getString("ID");                         
                        float  str3 = rs.getFloat("TOTAL");
                         
                        model.addRow(new Object[]{str1,str2,str3});
                    }
                    
                    query = " select sum(TOTAL) from SALES where date BETWEEN \"" + s1 + "\" AND \"" + s2 + "\" ; " ;
                    
                    ResultSet rs1 = st1.executeQuery(query) ;
                    rs1.next() ; 
                    
                    float val = rs1.getFloat("sum(Total)") ; 
                        
                    total.setVisible(true) ; 
                    ans.setVisible(true) ; 
                    ans.setText("Rs. " + val+ "") ;                  
                }        
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex,"Invalid Input!!",JOptionPane.ERROR_MESSAGE);          
        }
          
    

    
    }//GEN-LAST:event_sBWActionPerformed

    private void sMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sMActionPerformed

    private void sYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sYActionPerformed

    private void sRECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sRECActionPerformed
    
    DefaultTableModel model=(DefaultTableModel)jTable1.getModel();               
    model.setRowCount(0) ; 
    
        try 
        {
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS","root","go5a1on1");
            Statement st=con.createStatement();
            Statement st1=con.createStatement();
            
            String query = "select * from SALES order by DATE DESC ; " ;
            ResultSet rs = st.executeQuery(query) ;            
            
            if ( !rs.isBeforeFirst() ) 
                {    
                    JOptionPane.showMessageDialog(null,"NO RECORDS to SHOW !","EMPTY!",JOptionPane.INFORMATION_MESSAGE);
                } 
            else
                {   
                    disp.setVisible(true) ; 
                    
                    
                    while(rs.next())
                    {
                        String str1 =(rs.getDate("DATE")).toString();
                        String str2 = rs.getString("ID");                         
                        float  str3 = rs.getFloat("TOTAL");
                         
                        model.addRow(new Object[]{str1,str2,str3});
                    }
                    
                    query = " select sum(TOTAL) from SALES ; " ;
                    ResultSet rs1 = st1.executeQuery(query) ;
                    rs1.next() ; 
                    
                    float val = rs1.getFloat("sum(Total)") ; 
                        
                    total.setVisible(true) ; 
                    ans.setVisible(true) ; 
                    ans.setText("Rs. " + val+ "") ;                  
                }        
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex,"Invalid Input!!",JOptionPane.ERROR_MESSAGE);          
        }
    
    }//GEN-LAST:event_sRECActionPerformed

    private void pRECActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pRECActionPerformed
       
    DefaultTableModel model=(DefaultTableModel)jTable1.getModel();               
    model.setRowCount(0) ; 
        
        try 
        {
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS","root","go5a1on1");
            Statement st=con.createStatement();
            Statement st1=con.createStatement();
            
            String query = "select * from BUY order by DATE DESC ; " ;
            ResultSet rs = st.executeQuery(query) ;
                        
            if ( !rs.isBeforeFirst() ) 
                {    
                    JOptionPane.showMessageDialog(null,"NO RECORDS to SHOW !","EMPTY!",JOptionPane.INFORMATION_MESSAGE);
                } 
            else
                {   
                    
                    disp.setVisible(true) ; 
                    
                    while(rs.next())
                    {
                        String str1 =(rs.getDate("DATE")).toString();
                        String str2 = rs.getString("ID");                         
                        float  str3 = rs.getFloat("TOTAL");
                         
                        model.addRow(new Object[]{str1,str2,str3});
                    }
                    
                    query = " select sum(TOTAL) from BUY ; " ;
                    ResultSet rs1 = st1.executeQuery(query) ;
                    rs1.next() ; 
                    
                    float val = rs1.getFloat("sum(Total)") ; 
                        
                    total.setVisible(true) ; 
                    ans.setVisible(true) ; 
                    ans.setText("Rs. " + val+ "") ;                  
                }        
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex,"Invalid Input!!",JOptionPane.ERROR_MESSAGE);          
        }
    }//GEN-LAST:event_pRECActionPerformed

    private void pBWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pBWActionPerformed
    
    DefaultTableModel model=(DefaultTableModel)jTable1.getModel();               
    model.setRowCount(0) ; 
                    
    String s1 = (String)JOptionPane.showInputDialog(null,"ENTER START DATE (yyyy-mm-dd) " , "Sales" , JOptionPane.PLAIN_MESSAGE );
    String s2 = (String)JOptionPane.showInputDialog(null,"ENTER END DATE (yyyy-mm-dd) "   , "Sales" , JOptionPane.PLAIN_MESSAGE );
      
        try 
        {
            Connection con = (Connection)DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS","root","go5a1on1");
            Statement st=con.createStatement();
            Statement st1=con.createStatement();
            
            String query = "select * from BUY where date BETWEEN \"" + s1 + "\" AND \"" + s2 + "\" order by date DESC ; " ;
            ResultSet rs = st.executeQuery(query) ;
            
            
            if ( !rs.isBeforeFirst() ) 
                {    
                    JOptionPane.showMessageDialog(null,"NO RECORDS to SHOW !","EMPTY!",JOptionPane.INFORMATION_MESSAGE);
                } 
            else
                {   
                    
                    disp.setVisible(true) ; 
                    
                    while(rs.next())
                    {
                        String str1 =(rs.getDate("DATE")).toString();
                        String str2 = rs.getString("ID");                         
                        float  str3 = rs.getFloat("TOTAL");
                         
                        model.addRow(new Object[]{str1,str2,str3});
                    }
                    
                    query = " select sum(TOTAL) from BUY where date BETWEEN \"" + s1 + "\" AND \"" + s2 + "\" ; " ;
                    ResultSet rs1 = st1.executeQuery(query) ;
                    rs1.next() ; 
                    
                    float val = rs1.getFloat("sum(Total)") ; 
                        
                    total.setVisible(true) ; 
                    ans.setVisible(true) ; 
                    ans.setText("Rs. " + val+ "") ;                  
                }        
        }
        catch (Exception ex)
        {
            JOptionPane.showMessageDialog(null,ex,"Invalid Input!!",JOptionPane.ERROR_MESSAGE);          
        }
        
    }//GEN-LAST:event_pBWActionPerformed

    private void pMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pMActionPerformed

    private void pYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pYActionPerformed

    private void backBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBActionPerformed

        ManHP x = new ManHP();
        x.setVisible(true);
        x.setLocationRelativeTo(null);
        this.dispose() ;

    }//GEN-LAST:event_backBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesRecord.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesRecord().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ans;
    private javax.swing.JButton backB;
    private javax.swing.JScrollPane disp;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton pBW;
    private javax.swing.JButton pM;
    private javax.swing.JButton pREC;
    private javax.swing.JButton pY;
    private javax.swing.JButton sBW;
    private javax.swing.JButton sM;
    private javax.swing.JButton sREC;
    private javax.swing.JButton sY;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
