/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rasystem;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author Dell
 */
public class AddItem extends javax.swing.JFrame {

    /**
     * Creates new form AddItem
     */
    private int RES;

    public AddItem() {
        initComponents();
        RES = 0;
    }

    public void setDetails( String iid , String nam , String cuis , String spr , String mpr , 
                            String I1 , String I2 , String I3 , String I4 ,
                            String Qu1 , String Qu2 , String Qu3 , String Qu4 ) {
       
        id.setText(iid);        
        name.setText(nam);        
        cuisine.setText(cuis);
        
        sp.setText(spr);
        mp.setText(mpr);

        Ing1.setText(I1);
        Q1.setText(Qu1);

        Ing2.setText(I2);
        Q2.setText(Qu2);

        Ing3.setText(I3);
        Q3.setText(Qu3);

        Ing4.setText(I4);
        Q4.setText(Qu4);
        
        RES = 0;
    }

    public int getflag() {
        return RES;
    }

    public void click1() {
        addActionPerformed(null);
    }

    int checkinput() {
        String s, s1;

        s = name.getText();
        if (s.equals("")) {
            return 0;
        }
        s = id.getText();
        if (s.equals("")) {
            return 0;
        }

        s = cuisine.getText();
        if (s.equals("")) {
            return 0;
        }
        s = s.toUpperCase();
        System.out.println(s);

        if ((s.equals("INDIAN") || s.equals("DRINKS") || s.equals("CONTINENTAL")) == false) {
            return 2;
        }

        s = sp.getText();
        if (s.equals("")) {
            return 0;
        }
        s = mp.getText();
        if (s.equals("")) {
            return 0;
        }

        s = Ing1.getText();
        s1 = Q1.getText();
        if (!s.equals("") && s1.equals("")) {
            return 1;
        }
        s = Ing2.getText();
        s1 = Q2.getText();
        if (!s.equals("") && s1.equals("")) {
            return 1;
        }
        s = Ing3.getText();
        s1 = Q3.getText();
        if (!s.equals("") && s1.equals("")) {
            return 1;
        }
        s = Ing4.getText();
        s1 = Q4.getText();
        if (!s.equals("") && s1.equals("")) {
            return 1;
        }

        return -1;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cuisine = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        sp = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        mp = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Q1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        Ing2 = new javax.swing.JTextField();
        Q2 = new javax.swing.JTextField();
        Ing3 = new javax.swing.JTextField();
        Q3 = new javax.swing.JTextField();
        Ing4 = new javax.swing.JTextField();
        Q4 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        back = new javax.swing.JButton();
        Ing1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Name : ");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Enter Item Details :");

        jLabel11.setText("Item ID  : ");

        jLabel12.setText("Cuisine  : ");

        jLabel13.setText("Selling (Rs) : ");

        jLabel14.setText("Making (Rs) : ");

        jLabel15.setText("Ingredient1:  ");

        Q1.setText("0");
        Q1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Q1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Quantity(SI) :");

        Q2.setText("0");

        Q3.setText("0");

        Q4.setText("0");

        jLabel23.setText("Ingredient2:  ");

        jLabel24.setText("Ingredient3:  ");

        jLabel25.setText("Ingredient4:  ");

        jLabel17.setText("Quantity(SI) :");

        jLabel18.setText("Quantity(SI) :");

        jLabel19.setText("Quantity(SI) :");

        add.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        add.setText("ADD ITEM");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        back.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        back.setText("<< BACK");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Ing1)
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(157, 157, 157)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Q2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(add))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(Ing2, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Ing3, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(Ing4))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Q4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                    .addComponent(id))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mp, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cuisine, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cuisine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(mp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(Q1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Ing1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ing2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Q2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ing3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Q3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ing4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Q4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(back))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        if (checkinput() == -1) {
            try {
                Connection con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/RAS", "root", "go5a1on1");
                Statement st = con.createStatement();

                String query1 = "Select ID from DISH where ID = \"" + id.getText() + "\"; ";
                ResultSet rs = st.executeQuery(query1);

                if (rs.isBeforeFirst()) {
                    JOptionPane.showMessageDialog(null, "ITEM with this ID ALREADY PRESENT !! ", "Add Failed", JOptionPane.ERROR_MESSAGE);
                    id.setText(null);
                } else {
                    String name1 = "\"" + name.getText() + "\"";
                    String id1 = "\"" + id.getText() + "\"";
                    String cuisine1 = "\"" + cuisine.getText() + "\"";
                    float sp1 = Float.parseFloat(sp.getText());
                    float mp1 = Float.parseFloat(mp.getText());

                    String i1 = "\"" + Ing1.getText() + "\"";
                    float q1 = Float.parseFloat(Q1.getText());

                    String i2 = "\"" + Ing2.getText() + "\"";
                    float q2 = Float.parseFloat(Q2.getText());

                    String i3 = "\"" + Ing3.getText() + "\"";
                    float q3 = Float.parseFloat(Q3.getText());

                    String i4 = "\"" + Ing4.getText() + "\"";
                    float q4 = Float.parseFloat(Q4.getText());

                    int flag = 0;
                    if (i1.equals("\"\"") == false) {

                        query1 = "Select ID from Ing where name = " + i1 + ";";
                        rs = st.executeQuery(query1);
                        if (!rs.isBeforeFirst()) {
                            flag++;
                            int input = JOptionPane.showConfirmDialog(null, "INGREDIENT-1 UNAVAILABLE !!!\nAdd to Inventory First ! ", "Alert", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);

                            if (input == JOptionPane.YES_OPTION) {
                                flag--;
                                AddIng x = new AddIng();
                                x.setVisible(true);
                                x.setLocationRelativeTo(null);

                            }
                            this.dispose();
                        }
                    }

                    if (i2.equals("\"\"") == false) {
                        query1 = "Select ID from Ing where name = " + i2 + ";";
                        rs = st.executeQuery(query1);
                        if (!rs.isBeforeFirst()) {
                            flag++;
                            int input = JOptionPane.showConfirmDialog(null, "INGREDIENT-2 UNAVAILABLE !!!\nAdd to Inventory ?", "Alert", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                            if (input == JOptionPane.YES_OPTION) {
                                flag--;
                                AddIng x = new AddIng();
                                x.setVisible(true);
                                x.setLocationRelativeTo(null);
                            }
                            this.dispose();
                        }
                    }

                    if (i3.equals("\"\"") == false) {
                        query1 = "Select ID from Ing where name = " + i3 + ";";
                        rs = st.executeQuery(query1);
                        if (!rs.isBeforeFirst()) {
                            flag++;
                            int input = JOptionPane.showConfirmDialog(null, "INGREDIENT-3 UNAVAILABLE !!!\nAdd to Inventory ?", "Alert", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                            if (input == JOptionPane.YES_OPTION) {
                                flag--;
                                AddIng x = new AddIng();
                                x.setVisible(true);
                                x.setLocationRelativeTo(null);
                            }
                            this.dispose();
                        }
                    }

                    if (i4.equals("\"\"") == false) {
                        query1 = "Select ID from Ing where name = " + i4 + ";";
                        rs = st.executeQuery(query1);
                        if (!rs.isBeforeFirst()) {
                            flag++;
                            int input = JOptionPane.showConfirmDialog(null, "INGREDIENT-4 UNAVAILABLE !!!\nAdd to Inventory ?", "Alert", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                            if (input == JOptionPane.YES_OPTION) {
                                flag--;
                                AddIng x = new AddIng();
                                x.setVisible(true);
                                x.setLocationRelativeTo(null);
                            }
                            this.dispose();
                        }
                    }
                    if (flag != 0) {
                        return;
                    }
                    RES = 1 ;     
                    String query2 = "Insert into Dish values(" + id1 + "," + name1 + "," + cuisine1 + "," + sp1 + "," + mp1 + ","
                            + i1 + "," + q1 + "," + i2 + "," + q2 + "," + i3 + "," + q3 + "," + i4 + "," + q4 + "); ";
                    st.executeUpdate(query2);
                                
                    JOptionPane.showMessageDialog(null, "ITEM ADDED SUCCESSFULLY !!", "Update", JOptionPane.INFORMATION_MESSAGE);

                    UpdateMenu x = new UpdateMenu();
                    x.setVisible(true);
                    x.setLocationRelativeTo(null);
                    this.dispose();

                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex, "Alert", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else if (checkinput() == 0) {
            JOptionPane.showMessageDialog(null, "INCOMPLETE INPUT !! ", "Alert", JOptionPane.ERROR_MESSAGE);

        } else if (checkinput() == 1) {
            JOptionPane.showMessageDialog(null, "ENTER QUANTITY !! ", "Alert", JOptionPane.ERROR_MESSAGE);

        } else if (checkinput() == 2) {
            JOptionPane.showMessageDialog(null, "ENTER VALID CUISINE !! ", "Alert", JOptionPane.ERROR_MESSAGE);
            cuisine.setText(null);
        }
    }//GEN-LAST:event_addActionPerformed

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed

        UpdateMenu x = new UpdateMenu();
        x.setVisible(true);
        x.setLocationRelativeTo(null);
        this.dispose();

    }//GEN-LAST:event_backActionPerformed

    private void Q1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Q1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Q1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddItem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Ing1;
    private javax.swing.JTextField Ing2;
    private javax.swing.JTextField Ing3;
    private javax.swing.JTextField Ing4;
    private javax.swing.JTextField Q1;
    private javax.swing.JTextField Q2;
    private javax.swing.JTextField Q3;
    private javax.swing.JTextField Q4;
    private javax.swing.JButton add;
    private javax.swing.JButton back;
    private javax.swing.JTextField cuisine;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField mp;
    private javax.swing.JTextField name;
    private javax.swing.JTextField sp;
    // End of variables declaration//GEN-END:variables
}
